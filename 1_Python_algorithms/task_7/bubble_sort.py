


#O(n^2) - худший случай
def bubble_sort(mas):
    j = 1
    while j < len(mas):
        for i in range(len(mas)-j):
            if mas[i] > mas[i+1]:
                mas[i], mas[i+1] = mas[i+1], mas[i]
            print(mas)
            print('-'*20)
        print()
        j += 1
    return mas



l = [54,3,3,4,5,2,24,2342,13413,134134,1,34]
print(bubble_sort(l))


'''
Возможно, цикл выдвижения наибольшего числа не выполнит ни одной перестановки. Это будет означать, что массив уже 
отсортирован. Но алгоритм не учитывает этот факт и продолжает работу, устанавливая самые большие элементы в конец 
анализируемого подмассива – хотя они уже стоят на своих местах. Поэтому необходимо ввести одно дополнение: если за 
время прохождения внутреннего цикла не было произведено перестановок, то алгоритм сортировки завершается.
'''
li = [5,2,7,4,0,9,8,6]
n = 1
while n < len(li):
     f=0
     for i in range(len(li)-n):
          if li[i] > li[i+1]:
            li[i],li[i+1] = li[i+1],li[i]
            f=1
          print(li)
     print('--------')
     if f == 0:
         break
     n += 1
print(li)