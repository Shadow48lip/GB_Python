__author__ = 'Дмитрий Назаркин'


# Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()), который должен
# принимать данные (список списков) для формирования матрицы.
# Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
# Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
# Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
# Далее реализовать перегрузку метода __add__() для  сложения двух объектов класса Matrix (двух матриц).
# Результатом сложения должна быть новая матрица.
# Подсказка: сложение элементов матриц выполнять поэлементно. Первый элемент первой строки первой матрицы складываем
# с первым элементом первой строки второй матрицы и пр.


class Matrix:
    def __init__(self, matrix):
        self.matrix = matrix

    def __str__(self):
        return str(self.matrix)

    def __add__(self, other):
        if len(self.matrix) != len(other):
            raise ValueError('Разные матрицы')

        new_matrix = [[cell1 + cell2 for cell1, cell2 in zip(row1, row2)] for row1, row2, in zip(self.matrix, other)]
        print(new_matrix)


my_matrix_1 = [[1, 2, 3], [4, 5, 6]]
my_matrix_2 = [[7, 8, 9], [10, 11, 12]]

matrix = Matrix(my_matrix_1)
print(matrix)

matrix + my_matrix_2
